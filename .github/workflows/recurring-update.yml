name: recurring-update
on:
  workflow_dispatch:
  schedule:
    - cron: "*/15 * * * *"  # Fixed: added missing closing quote and fields
jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout only update.sh
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            update.sh
          sparse-checkout-cone-mode: false
          fetch-depth: 1
      - name: Install GitHub CLI and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq
      - name: Run update script
        run: bash ./update.sh
        
      - name: Force upload all files via GitHub API
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REPO="${{ github.repository }}"
          BRANCH="main"
          COMMIT_MSG="Force update of constellation files"
          find . -type f \( -name "*.xml" -o -name "*.tle" \) | while read -r FILE; do
            FILE_PATH="${FILE#./}"  # Remove leading './' from path
            echo "Uploading $FILE_PATH (overwrite if exists)"
            
            # Base64 encode the file content
            base64 -w 0 "$FILE" > encoded_content.tmp
            
            # Fetch SHA if file exists; empty if not
            SHA=$(gh api -H "Accept: application/vnd.github+json" \
              repos/$REPO/contents/$FILE_PATH \
              --jq .sha 2>/dev/null || echo "")
            
            # Create JSON payload using a template file approach
            cat > payload_template.json << 'EOF'
{
  "message": "",
  "content": "",
  "branch": ""
}
EOF
            
            # Build the JSON payload by reading from files
            if [ -z "$SHA" ]; then
              jq \
                --arg message "$COMMIT_MSG" \
                --arg branch "$BRANCH" \
                --rawfile content encoded_content.tmp \
                '.message = $message | .content = $content | .branch = $branch' \
                payload_template.json > payload.json
            else
              cat > payload_template.json << 'EOF'
{
  "message": "",
  "content": "",
  "branch": "",
  "sha": ""
}
EOF
              jq \
                --arg message "$COMMIT_MSG" \
                --arg branch "$BRANCH" \
                --arg sha "$SHA" \
                --rawfile content encoded_content.tmp \
                '.message = $message | .content = $content | .branch = $branch | .sha = $sha' \
                payload_template.json > payload.json
            fi
            
            # Actually upload the file
            gh api -X PUT \
              -H "Accept: application/vnd.github+json" \
              repos/$REPO/contents/$FILE_PATH \
              --input payload.json
              
            # Clean up temporary files
            rm -f encoded_content.tmp payload_template.json payload.json
          done
