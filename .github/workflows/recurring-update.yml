name: recurring-update

on:
  workflow_dispatch:
  schedule:
    - cron: "*/15 * * * *"

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout only update.sh
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            update.sh
          sparse-checkout-cone-mode: false
          fetch-depth: 1

      - name: Install GitHub CLI and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq

      - name: Run update script
        run: bash ./update.sh

      - name: Upload generated files via GitHub API
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REPO="${{ github.repository }}"
          BRANCH="main"
          COMMIT_MSG="Automated constellation data update via API"

          find . -type f \( -name "*.xml" -o -name "*.tle" \) | while read -r FILE; do
            FILE_PATH="${FILE#./}"  # Remove ./ prefix
            ENCODED_CONTENT=$(base64 -w 0 "$FILE")
            JSON_BODY="payload.json"

            # Try to get SHA if the file exists
            SHA=$(gh api -H "Accept: application/vnd.github+json" \
                  repos/$REPO/contents/$FILE_PATH \
                  --jq .sha 2>/dev/null || true)

            echo "Uploading $FILE_PATH"

            if [ -n "$SHA" ]; then
              jq -n \
                --arg message "$COMMIT_MSG" \
                --arg content "$ENCODED_CONTENT" \
                --arg branch "$BRANCH" \
                --arg sha "$SHA" \
                '{message: $message, content: $content, branch: $branch, sha: $sha}' \
                > "$JSON_BODY"
            else
              jq -n \
                --arg message "$COMMIT_MSG" \
                --arg content "$ENCODED_CONTENT" \
                --arg branch "$BRANCH" \
                '{message: $message, content: $content, branch: $branch}' \
                > "$JSON_BODY"
            fi

            # Upload the file via GitHub REST API
            gh api --method PUT \
              -H "Accept: application/vnd.github+json" \
              --input "$JSON_BODY" \
              "repos/$REPO/contents/$FILE_PATH"
          done
